install.packages("arules")
library(arules)
setwd("D:/Rdata")
#prob 14.4
cosmetics.df<-read.csv("Cosmetics.csv")
str(cosmetics.df)
cosmetics.df<-cosmetics.df[ , -1]
View(cosmetics.df)

#convert binary incident matrix
cosmetics.mat<-as.matrix(cosmetrics.df)
cosmetrics.mat

#Recast incidence matrix into transcation list.
cosmetircs.trans<-as(cosmetics.mat, "transcations")
inspace(cosmetics.trans)
itemFrequencyPlot(cosmetics.trans)

#Generate rules with the highest lift.
rules<-apriori(cosmetics.trans, parameter = list(supp=0.01, conf=0.1, target="rules"))
inspect(head(sort(rules, by="lift")))

rules<-apriori(cosmetics.trans, parameter= list(supp=0.1, conf=0.5, target = "rules"))
inspect(head(sort(rules, by = "lift"),n=20))

rules<-apriori(cosmetics.trans, parameter = list(supp=0.1, conf=0.8, target = "rules"))
inspect(head(sort(rules, by = "lift"),n=20))

rules<-apriori(cosmetics.trans)
inspect(head(sort(rules, by = "lift"), n=20))

#R의 similarity()함수를 이용하여 고객 간 코사인 유사도를 계산하시오.
library(recommderlab)
mm<-as.matrix(rating.df[c(1,4,15),]
rr<-as(mm, "realRatingMatrix")
similarity(rr, method = "cosine")

#항목 기반 협업필터링을 적용하고 그 결과를 기반으로 E.N 학생에게 과목을 추천(UBCF)
m-<as.matrix(rating.df)
r<-as(m, "realRatingMatrix")

#유저베이스드 필터링
UB.Rec<-Recommender(r, "UBCF")
pred<-predict(UB.Rec, r, type = "ratings")
ipred<-predict(UB.Rec, r, type = "topNList")
mpred<-as(pred, "matrix")
mred
as(pred, "list")
impred<-as(ipred, "matrix")
impred
as(impred, "list")

#course-rating based recommendation(IBCF) 항목기반 협업필터링
IB.Rec<-Recommender(r, "IBCF")
iipred<-predict(IB.Rec, r, n=5, type = "topNList")
as(iipred, "matrix")
as(iipred, "list")




















