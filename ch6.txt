housing.df<-read.csv("BostonHousin.csv")
housing.df<-read.csv("BostonHousing.csv")
selected.var <- c(1,4,6,13)
#학습데이터 검증데이터 분리
set.seed(1)
train.rows<-sample(rownames(housing.df), dim(housing.df)[1]*0.6)
train.df<-housing.df[train.rows, selected.var]
valid.df<-hosting.df[-train.index, selected.var]
housing.lm<-lm(MEDV ~., data = train.df)

summary(housing.lm)
options(scipen=999)
sqrt(sum((housing.lm$residuals-mean(housing.lm$residuals))^2)/299)

#상관관계 분석
install.packages("corrplot")
library(corrplot)
housing.df<-read.csv("BostonHousing.csv")
housing.df<-housing.df[,-14]
cor(housing.df[,c("CRIP", "CHAS", "RM")], housing.df)
cor(housing.df[,c("INDUS", "NOX", "TAX")]
cor_all <- cor (housing.df)
cor_all
library(corrplot)
corrplot(cor_all, method="number")
corrplot(cor_all, method="pie")

#전역탐색
install.package("leaps")
library(leaps)
set.seed(1)
train.index<-sample(c(1:dim(housing.df)[1]), 0.6*dim(housing.df)[1])
valid.index<-setdiff(c(1:dim(housing.df)[1]), train.index)
train.df<-housing.df[train.index, ]
valid.df <-housing.df[valid.index, ]
str(train.df)
search<-regsubsets(MEDV ~., data= housing.df, nbest=1, nvmax=dim(train.df)[2], method="exhaustive")
sum<-summary(search)
sum$which
sum$adjr2
sum$cp

#top 3 models
models <- order(sum$adjr2, decreasing = T)[1:3]
models
library(gains)
library(forecast)

#run model on training and validation
selected.vars <-c(1,2,4,5,6,8,9,10,11,12,13)
reg.model1 <- lm(MEDV ~ ., data = train.df[,selected.vars])
summary(reg.model)
#training
accuracy(reg.model$fitted.values, train.df$MEDV)
?accuray
pred<-predict(reg.model, valid.df)
accuracy(redm valid.df$MEDV)

#향상차트 그리기
gain <- gains(valid.df$MEDV, pred)
plot(c(0, gain$cume.pct.of.total*sum(valid.df$MEDV)) ~ c(0, gain$cume.obs), xlab="# cases", ylab="Cumulative", main="Lift Chart", type="1")
lines(c(0, sum(valid.df$MEDV))~ c(0,dim(valid.df)[1]), lty=2)
medv <- valid.df$MEDV
barplot(gain$mean.resp/mean(medv), names.arg=gain$dpth, xlab="Precentile", ylab="Mean Respond", main="Decile")





































